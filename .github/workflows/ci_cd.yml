name: Android CI

on:
  push:
    branches: [ master ] # Triggers on pushes to these branches
  pull_request:
    branches: [ master ] # Triggers on pull requests to these branches

jobs:
  build:
    runs-on: ubuntu-latest # Use a Linux runner for Android builds

    steps:
      - uses: actions/checkout@v3 # Checkout the repository

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17' # Or your preferred Java version
          distribution: 'temurin' # Or 'zulu' if you prefer

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          build-tools-version: '33.0.0' # Or your desired build tools version
          api-level: '33' # Or your target API level
          ndk-version: 'latest' # Optional: Include NDK if needed

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload Debug APK to Artifacts (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload to DeployGate
        env:
          DEPLOYGATE_API_TOKEN: ${{ secrets.DEPLOYGATE_API_TOKEN }}
          DEPLOYGATE_USER: ${{ secrets.DEPLOYGATE_USERNAME }}
        run: |
          curl -X POST \
            https://deploygate.com/api/users/$DEPLOYGATE_USERNAME/apps \
            -F "file=@app/build/outputs/apk/debug/app-debug.apk" \
            -F "token=$DEPLOYGATE_API_TOKEN" \
            -F "message=Build from GitHub Actions" \
            -F "distribution_key=development" \
            -F "release_note=Automated build from branch ${{ github.ref_name }}"
      

      #      - name: Upload to DeployGate
#        uses: jmatsu/dg-upload-app-action@v0.2.2
#        with:
#          app_owner_name: donglphtv
#          api_token: ${{ secrets.DEPLOYGATE_API_TOKEN }}
#          app_file_path: app/build/outputs/apk/debug/app-debug.apk

